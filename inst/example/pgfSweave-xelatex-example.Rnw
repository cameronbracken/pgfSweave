\documentclass{article}

\usepackage[utf8]{inputenc}

\usepackage{tikz}
\tikzset{external/system call={xelatex \tikzexternalcheckshellescape -halt-on-error 
  -interaction=batchmode -jobname "\image" "\texsource"}}

%  ******* Warning ******** 
% the list and make mode of externalization does not create a working makefile
% when using xelatex, unless you pass the -8bit option to xelatex, for example:
%
% $ xelatex -8bit pgfSweave-xelatex-example.tex
% 
% then run 
%
% $ make -f pgfSweave-xelatex-example.makefile2
%

%  ******* Another Warning ********
% the Sweave package must be loaded with the noae option for compatibility
% with fontspec (otherwise cryptic errors about T1 encoding will appear):

\usepackage[noae]{Sweave}

\usepackage[margin=1in]{geometry}

% font selection, logos
\usepackage{fontspec, metalogo}
\setmainfont{Times} % Windows: replace with Times New Roman
\setmonofont{Courier} % Windows: replace with Courier New

\title{Minimal pgfSweave Example}
\author{Cameron Bracken}    

\begin{document}

<<setup,echo=F>>= 
setCacheDir("cache") 
options(keep.space=TRUE)
@ 

\maketitle
This example is identical to that in the Sweave manual and is intended to 
introduce pgfSweave and highlight the basic differences.  Please refer to 
the pgfSweave vignette for more usage instructions. 

We embed parts of the examples from the \texttt{kruskal.test} help page 
into a \XeLaTeX\ document:

<<data,cache=T,tidy=T>>=
        #     hey, a comment
    data(airquality)
    print(kruskal.test( Ozone ~ Month, data = airquality ))  # and another
@

\noindent which shows that the location parameter of the Ozone distribution varies 
significantly from month to month. Finally we include a boxplot of the data:

\begin{figure}[!ht]
\centering
%notice the new options
{\pgfkeys{/pgf/images/include external/.code={\includegraphics[width=3in]{#1}}}
<<boxplot,echo=T,fig=T,width=5,height=5,tikz=T,external=T,highlight=T>>=
  #boxplot(Ozone ~ Month, data = airquality,
  #  main='Ozone distribution',xlab='Month',ylab='Concentration')

  # or even better, to show off the Unicode handling:
  
  n <- 10
  chars <- matrix(intToUtf8(seq(161,,1,10*n),multiple=T),n)

  plot(1:n,type='n',xlab='',ylab='',axes=F, main="UTF-8 Characters")
  for(i in 1:n)
    for(j in 1:n)
      text(i,j,chars[i,j])

@
}% this brace ends the effect of ‘include external’
\caption{This is from pgfSweave. Text is typeset by \XeLaTeX\ and so matches the
 font of the document.}
\end{figure}


\end{document}

